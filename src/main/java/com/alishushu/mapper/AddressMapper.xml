<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alishushu.mapper.AddressMapper">
  <resultMap id="BaseResultMap" type="com.alishushu.bean.Address">
    <id column="ADDID" jdbcType="VARCHAR" property="addid" />
    <result column="USERSID" jdbcType="VARCHAR" property="usersid" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ADDID, USERSID, ADDRESS, PHONE, NAME
  </sql>
  <select id="selectByExample" parameterType="com.alishushu.bean.AddressExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ADDRESS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  <!-- 根据UserID查询地址集合 -->
  <select id="selectAllAddressByUser" parameterType="String" resultType="com.alishushu.bean.Address">
  	select * from ADDRESS where USERSID = #{userid}
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ADDRESS
    where ADDID = #{addid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from ADDRESS
    where ADDID = #{addid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.alishushu.bean.AddressExample">
    delete from ADDRESS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.alishushu.bean.Address">
    insert into ADDRESS (ADDID, USERSID, ADDRESS, 
      PHONE, NAME)
    values (#{addid,jdbcType=VARCHAR}, #{usersid,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.alishushu.bean.Address">
    insert into ADDRESS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="addid != null">
        ADDID,
      </if>
      <if test="usersid != null">
        USERSID,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="name != null">
        NAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="addid != null">
        #{addid,jdbcType=VARCHAR},
      </if>
      <if test="usersid != null">
        #{usersid,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.alishushu.bean.AddressExample" resultType="java.lang.Long">
    select count(*) from ADDRESS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ADDRESS
    <set>
      <if test="record.addid != null">
        ADDID = #{record.addid,jdbcType=VARCHAR},
      </if>
      <if test="record.usersid != null">
        USERSID = #{record.usersid,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ADDRESS
    set ADDID = #{record.addid,jdbcType=VARCHAR},
      USERSID = #{record.usersid,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.alishushu.bean.Address">
    update ADDRESS
    <set>
      <if test="usersid != null">
        USERSID = #{usersid,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        ADDRESS = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
    </set>
    where ADDID = #{addid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.alishushu.bean.Address">
    update ADDRESS
    set USERSID = #{usersid,jdbcType=VARCHAR},
      ADDRESS = #{address,jdbcType=VARCHAR},
      PHONE = #{phone,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR}
    where ADDID = #{addid,jdbcType=VARCHAR}
  </update>
</mapper>